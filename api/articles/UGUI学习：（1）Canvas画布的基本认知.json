{"title":"UGUI学习：（1）Canvas画布的基本认知","slug":"UGUI学习：（1）Canvas画布的基本认知","date":"2020-02-18T11:13:53.000Z","updated":"2020-04-20T11:28:46.093Z","comments":true,"path":"api/articles/UGUI学习：（1）Canvas画布的基本认知.json","photos":[],"link":"","excerpt":"Canvas一共有三种渲染模式：","covers":["/2020/02/18/UGUI%E5%AD%A6%E4%B9%A0%EF%BC%9A%EF%BC%881%EF%BC%89Canvas%E7%94%BB%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E7%9F%A5/1.png","/2020/02/18/UGUI%E5%AD%A6%E4%B9%A0%EF%BC%9A%EF%BC%881%EF%BC%89Canvas%E7%94%BB%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E7%9F%A5/2.png","/2020/02/18/UGUI%E5%AD%A6%E4%B9%A0%EF%BC%9A%EF%BC%881%EF%BC%89Canvas%E7%94%BB%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E7%9F%A5/3.png","/2020/02/18/UGUI%E5%AD%A6%E4%B9%A0%EF%BC%9A%EF%BC%881%EF%BC%89Canvas%E7%94%BB%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E7%9F%A5/4.png"],"content":"<p>Canvas一共有三种渲染模式：</p>\n<a id=\"more\"></a>\n\n<p><img src=\"/2020/02/18/UGUI%E5%AD%A6%E4%B9%A0%EF%BC%9A%EF%BC%881%EF%BC%89Canvas%E7%94%BB%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E7%9F%A5/1.png\" alt=\"Canvas渲染类型\"></p>\n<h2 id=\"Overlay模式：\"><a href=\"#Overlay模式：\" class=\"headerlink\" title=\"Overlay模式：\"></a>Overlay模式：</h2><p><img src=\"/2020/02/18/UGUI%E5%AD%A6%E4%B9%A0%EF%BC%9A%EF%BC%881%EF%BC%89Canvas%E7%94%BB%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E7%9F%A5/2.png\" alt=\"overlay\"></p>\n<p>一般就表示该层UI始终处于最顶层，场景里的物体全部处于UI的下方。这个模式一般在做2d项目或者要始终处于最顶层的UI例如很多游戏左上角的角色血条、法力值等等的效果时会用到。</p>\n<p>在该模式下Canvas的Rectangle Transform属性是无法编辑的，也就是说它的大小位置都是固定的。因此在这种模式下各个UI组件的自适应变得非常方便，当每个组件的锚点都为自身时，他们的位置就会随着随着屏幕的大小而变化。</p>\n<p>Sort order属性类似于层级关系，当有多个canvas存在时，可以通过这个属性来编辑他们的显示顺序，值越大的canvas显示越靠前。</p>\n<h2 id=\"Camera模式：\"><a href=\"#Camera模式：\" class=\"headerlink\" title=\"Camera模式：\"></a>Camera模式：</h2><p><img src=\"/2020/02/18/UGUI%E5%AD%A6%E4%B9%A0%EF%BC%9A%EF%BC%881%EF%BC%89Canvas%E7%94%BB%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E7%9F%A5/3.png\" alt=\"camera\"></p>\n<p>此模式相当于把Canvas绑定在某个Camera上，如果没有绑定的话就会产生与Overlay模式一样的效果。在这个模式下就可实现UI的3d效果了，例如全境封锁、明日方舟的倾斜UI效果，但此时要注意被绑定的Camera的Projection选项一定要是3d模式，也就是Perspective模式。</p>\n<p>Plane distance属性是用来编辑Canvas与Camera的距离的，便于编辑，但是无论距离多远，Game窗口显示的效果都是一样的。</p>\n<h2 id=\"World-Space模式：\"><a href=\"#World-Space模式：\" class=\"headerlink\" title=\"World Space模式：\"></a>World Space模式：</h2><p><img src=\"/2020/02/18/UGUI%E5%AD%A6%E4%B9%A0%EF%BC%9A%EF%BC%881%EF%BC%89Canvas%E7%94%BB%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E7%9F%A5/4.png\" alt></p>\n<p>在这个模式下UI在场景里就不是单独的存在了，而被视为场景里的一个物体而存在。例如UI可以附加在场景的某个物体上成为其的子物体，使UI跟随物体移动。在制作类似于移动NPC的血条之类的效果时就很方便。</p>\n<hr>\n<h3 id=\"版权所有，转载请注明地址\"><a href=\"#版权所有，转载请注明地址\" class=\"headerlink\" title=\"版权所有，转载请注明地址\"></a>版权所有，转载请注明地址</h3><p>本文为「&copy;柑茶」原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。</p>\n","categories":[{"name":"Unity3D","slug":"Unity3D","count":3,"path":"api/categories/Unity3D.json"},{"name":"UGUI","slug":"Unity3D/UGUI","count":1,"path":"api/categories/Unity3D/UGUI.json"}],"tags":[{"name":"Unity3D","slug":"Unity3D","count":4,"path":"api/tags/Unity3D.json"},{"name":"UGUI","slug":"UGUI","count":1,"path":"api/tags/UGUI.json"}]}