{"title":"省VR技能大赛项目(1)-关于Transform组件的值获取问题","slug":"省VR技能大赛项目-1-关于Transform组件的值获取问题","date":"2020-06-28T04:52:49.000Z","updated":"2020-06-28T08:48:27.442Z","comments":true,"path":"api/articles/省VR技能大赛项目-1-关于Transform组件的值获取问题.json","photos":[],"link":"","excerpt":"这几天在做VR省赛的项目时，遇到这么一个需求：","covers":["/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/1.png","/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/2.png","/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/3.png","/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/5.png","/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/4.png","/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/6.png","/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/7.png","/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/8.png","/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/10.png","/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/11.png"],"content":"<p>这几天在做VR省赛的项目时，遇到这么一个需求：</p>\n<a id=\"more\"></a>\n\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/1.png\" alt=\"需求1\"></p>\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/2.png\" alt=\"需求2\"></p>\n<p>要求完成的效果是要求物体归回原位，大小旋转保持不变。所以我和指导老师初步想到了几个实现办法，分别是制作动画、导航寻路功能或者直接记录物体原本的位置信息。</p>\n<p>后来我考虑了一下，首先是导航功能，导航主要用于角色的自动寻路，而题目的要求仅仅是物体从展柜到镜头前的来回移动。所以应该用不到导航功能。</p>\n<p>接着我考虑了通过动画实现，理论上是可以实现的，但是题目要求的一共有八个物体，八个物体的位置信息分别不同，这也就意味着我要分别制作八个不同动画，可是比赛是有时间限制的。主办方绝对不会提倡用这种办法现实，所以也放弃了动画。</p>\n<p>最后只有通过记录物体原本的位置信息来时间效果了。</p>\n<p>记录位置信息说白了其实就是获取物体最初的Transform组件的信息，然后在需要物体归位的时候赋回即可。</p>\n<p>因此我的初步思路就是现在Start()方法里将物体的transform组件赋予一个自定的initialTransform来保存初始的位置信息，然后在Update()方法里将initialTransform赋回给物体。</p>\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/3.png\" alt=\"错误实现方法1\"></p>\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/5.png\" alt=\"错误实现方法2\"></p>\n<p>但是，测试的时候出现了错误，挂上物体的脚本并没有回到原本的位置上。</p>\n<p>我一开始以为是赋回的方法出现了问题，所以我换了个方法，把position的xyz分别拆开赋值：</p>\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/4.png\" alt=\"错误实现方法3\"></p>\n<p>但是物体仍然是一动不动。눈_눈</p>\n<p>花了好长时间琢磨之后我还是决定debug一下不同阶段的数据。</p>\n<p>首先是Start()初始化，在把this.transform赋给initialTransform的时候，我打印了initialTransform的x轴数据</p>\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/6.png\" alt=\"debug1\"></p>\n<p>数值和物体一开始的x轴数据是吻合的。</p>\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/7.png\" alt=\"debug2\"></p>\n<p>然后我移动了物体：</p>\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/8.png\" alt=\"debug3\"></p>\n<p>在Update()里等物体改变之后，再打印initialTransform和物体本身的this.transform的x轴数据</p>\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/10.png\" alt=\"debug3\"></p>\n<p>如果符合预期的话，initialTransform应该还是-5.65，而物体本身的transform应该改变了。</p>\n<p>但是结果并不是这样的，initialTransform和物体本身的this.transform竟然都改变了。</p>\n<p>后来我便分析了一下问题所在，我说期望的效果其实是自定的initialTransform保存物体一开始的transform的数值</p>\n<p>但是我写的是：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">CtrlObject</span> : <span class=\"title\">MonoBehaviour</span> &#123;</span><br><span class=\"line\">    Transform initialTransform;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Start</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        initialTransform = <span class=\"keyword\">this</span>.tranform;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个方法其实并不是保存数值，而是直接将物体的<strong><code>transform组件</code></strong>赋给了initialTransform，此时的initialTransform本质上就是物体的transform。所以物体本身的变化自然会导致initialTransform也会跟着变化。</p>\n<p>所以正确的应该是：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">CtrlObject</span> : <span class=\"title\">MonoBehaviour</span> &#123;</span><br><span class=\"line\">    Vector3 initialPosition;</span><br><span class=\"line\">    Quaternion initialRotation;</span><br><span class=\"line\">    Vector3 initialScale;\t\t<span class=\"comment\">//将transform组件的各个信息分开来，通过向量、四元数来获取它真正的数值来保存</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Start</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        initialPosition = <span class=\"keyword\">this</span>.transform.position;</span><br><span class=\"line\">        initialRotation = <span class=\"keyword\">this</span>.transform.rotation;</span><br><span class=\"line\">        initialScale = <span class=\"keyword\">this</span>.transform.localScale;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>获取的向量和四元数是具体的数值，是不会因为transform组件的变化而变化的。</p>\n<p>最后再需要的归位的时候再将位置信息赋回即可：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.transform.localPosition = Vector3.MoveTowards(<span class=\"keyword\">this</span>.transform.localPosition, <span class=\"keyword\">new</span> Vector3(initialPosition.x, initialPosition.y, initialPosition.z), step);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.transform.rotation = initialRotation;</span><br><span class=\"line\"><span class=\"keyword\">this</span>.transform.localScale = initialScale;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>顺便一提，本来这个小问题我挺难发现的，但是我在看了一个跟这个问题没什么关系的解决方案后突然有了灵感</p>\n</blockquote>\n<p><a href=\"https://blog.csdn.net/LLLLL__/article/details/88235941\" target=\"_blank\" rel=\"noopener\">Unity中为什么不能对transform.position.x直接赋值？-CSDN</a></p>\n<p><img src=\"/2020/06/28/%E7%9C%81VR%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E9%A1%B9%E7%9B%AE-1-%E5%85%B3%E4%BA%8ETransform%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E9%97%AE%E9%A2%98/11.png\" alt=\"debug4\"></p>\n<p>正是因为看到了这个赋值的问题，我才发现我上面所述的压根儿就没有赋值给transform的问题。</p>\n<p>不过倒是也又巩固了一下我对于结构体和值传递的记忆。</p>\n<hr>\n<h3 id=\"版权所有，转载请注明地址\"><a href=\"#版权所有，转载请注明地址\" class=\"headerlink\" title=\"版权所有，转载请注明地址\"></a>版权所有，转载请注明地址</h3><p>本文为「&copy;柑茶」原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。</p>\n","categories":[{"name":"C#","slug":"C","count":3,"path":"api/categories/C.json"}],"tags":[{"name":"Unity3D","slug":"Unity3D","count":5,"path":"api/tags/Unity3D.json"},{"name":"C#","slug":"C","count":3,"path":"api/tags/C.json"}]}