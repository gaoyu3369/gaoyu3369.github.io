{"title":"Unity中常用的Mathf函数","slug":"Unity中常用的Mathf函数","date":"2020-12-01T04:17:49.000Z","updated":"2020-12-01T05:15:46.034Z","comments":true,"path":"api/articles/Unity中常用的Mathf函数.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h3 id=\"一、乒乓函数\"><a href=\"#一、乒乓函数\" class=\"headerlink\" title=\"一、乒乓函数\"></a>一、乒乓函数</h3><h4 id=\"Mathf-PingPong\"><a href=\"#Mathf-PingPong\" class=\"headerlink\" title=\"Mathf.PingPong\"></a>Mathf.PingPong</h4><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mathf.PingPong(<span class=\"keyword\">float</span> t,<span class=\"keyword\">float</span> length);</span><br></pre></td></tr></table></figure>\n\n<p><strong>循环</strong>返回0-length的中间数值。<strong>不会</strong>取到0，也<strong>不会</strong>取到最大值length。t<strong>必须</strong>是一个自变量，不能取<strong><em>固定数值</em></strong>。所以在Unity中一般多用<code>Time.time</code>。</p>\n<h3 id=\"二、线性插值\"><a href=\"#二、线性插值\" class=\"headerlink\" title=\"二、线性插值\"></a>二、线性插值</h3><h4 id=\"Mathf-Lerp\"><a href=\"#Mathf-Lerp\" class=\"headerlink\" title=\"Mathf.Lerp\"></a>Mathf.Lerp</h4><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mathf.Lerp(<span class=\"keyword\">float</span> start,<span class=\"keyword\">float</span> end,<span class=\"keyword\">float</span> t);</span><br></pre></td></tr></table></figure>\n\n<p>在数值start和end之间，通过<em>t的比例</em>插值获得一个数值。t必须在<strong>0-1之间</strong>。当t=0时，返回值为start；当t=1时，返回值为end。</p>\n<p>与此同时，线性插值适用于很多其他场合，例如向量<code>Vector3.Lerp</code>、颜色<code>Color.Lerp</code>。</p>\n<h3 id=\"三、关于Random-Range的取值范围问题\"><a href=\"#三、关于Random-Range的取值范围问题\" class=\"headerlink\" title=\"三、关于Random.Range的取值范围问题\"></a>三、关于Random.Range的取值范围问题</h3><p><code>Random.Range(a，b);</code>常用来生成随机数，但是在不同情况下边界范围有所不同。</p>\n<ol>\n<li><p>当两数都为<strong>浮点类型</strong>时，返回值即为浮点型，且最大值和最小值<strong>都可以取到</strong>；</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Random.Range(<span class=\"keyword\">float</span> a,<span class=\"keyword\">float</span> b);</span><br><span class=\"line\"><span class=\"comment\">//a≤返回值≤b</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当两数都为<strong>整型</strong>时，返回值即为整型，且<strong>只能取到最小值</strong>；</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Random.Range(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b);</span><br><span class=\"line\"><span class=\"comment\">//a≤返回值&lt;b</span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<hr>\n<h3 id=\"版权所有，转载请注明地址\"><a href=\"#版权所有，转载请注明地址\" class=\"headerlink\" title=\"版权所有，转载请注明地址\"></a>版权所有，转载请注明地址</h3><p>本文为「&copy;柑茶」原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。</p>\n","categories":[{"name":"C#","slug":"C","count":7,"path":"api/categories/C.json"}],"tags":[{"name":"Unity3D","slug":"Unity3D","count":8,"path":"api/tags/Unity3D.json"},{"name":"C#","slug":"C","count":6,"path":"api/tags/C.json"}]}